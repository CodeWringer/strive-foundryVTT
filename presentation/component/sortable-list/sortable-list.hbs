{{!-- Required context:
viewModel: SortableListViewModel
cssClass: String | undefined
--}}
<section id="{{viewModel.id}}"{{#if cssClass}} class="{{cssClass}}"{{/if}}>
  {{#if (eq viewModel.headerLevel 1)}}<h1 class="strive-header flex flex-row flex-middle{{#if viewModel.showFancyFont}} fancy-font{{/if}}" style="margin-bottom: 0;">{{/if}}
  {{#if (eq viewModel.headerLevel 2)}}<h2 class="strive-header flex flex-row flex-middle{{#if viewModel.showFancyFont}} fancy-font{{/if}}" style="margin-bottom: 0;">{{/if}}
  {{#if (eq viewModel.headerLevel 3)}}<h3 class="strive-header flex flex-row flex-middle{{#if viewModel.showFancyFont}} fancy-font{{/if}}" style="margin-bottom: 0;">{{/if}}
    {{!-- Identity --}}
    {{#if viewModel.isCollapsible}}
    {{#> button viewModel=viewModel.vmHeaderButton leftAlign=true cssClass="flex-grow" }}
      <span class="flex-grow pad-l-sm font-size-lg font-bold{{#if viewModel.showFancyFont}} fancy-font{{/if}}">{{../viewModel.localizedTitle}}</span>
      {{!-- Expansion Toggle --}}
      <div class="flex flex-center">
        <i class="expanded ico ico-chevron-d-solid{{#if ../viewModel.vmHeaderButton.isEditable}} interactible{{/if}} dark{{#if ../viewModel.isExpanded}}{{else}} hidden{{/if}}"></i>
        <i class="collapsed ico ico-chevron-r-solid{{#if ../viewModel.vmHeaderButton.isEditable}} interactible{{/if}} dark{{#if ../viewModel.isExpanded}} hidden{{/if}}"></i>
      </div>
    {{/button}}
    {{else}}
      <span class="flex-grow">{{viewModel.localizedTitle}}</span>
    {{/if}}
    {{!-- Sorting Controls --}}
    {{#if viewModel.hasSortControls}}
    {{#with viewModel.sortControlsTemplate as |template|}}
        {{> (template) viewModel=../viewModel.vmSortControls cssClass="font-size-default" }}
      {{/with}}
    {{/if}}
    {{!-- Button Add Item --}}
    {{#if (and viewModel.isEditable (neq viewModel.addParamCount 0))}}
    {{#if (eq viewModel.addParamCount 1)}}
    {{> buttonAdd viewModel=viewModel.vmAddItem }}
    {{else}}
    {{> buttonContextMenu viewModel=viewModel.vmContextMenu }}
    {{/if}}
    {{/if}}
  {{#if (eq viewModel.headerLevel 1)}}</h1>{{/if}}
  {{#if (eq viewModel.headerLevel 2)}}</h2>{{/if}}
  {{#if (eq viewModel.headerLevel 3)}}</h3>{{/if}}
  {{#> sortableListExtraHeader }}{{/sortableListExtraHeader}}
  {{!-- Content --}}
  <div class="{{#if viewModel.isExpanded}}{{else}}hidden{{/if}}" 
    data-vis-group="{{viewModel.visGroupId}}">
    <ol class="sortable-list unstyled-list auto-margin-v-lg">
      {{#each viewModel.itemViewModelGroups as |itemViewModelGroup key|}}
      <li id="{{itemViewModelGroup.id}}" class="sortable-list-item flex flex-row shadow-sm">
        {{!-- Sorting controls --}}
        <div class="component-list-item-order-controls{{#if (neq ../viewModel.isEditable true)}} hidden{{/if}}">
          {{> button viewModel=itemViewModelGroup.vmBtnMoveUp fill=false }}
          {{!-- TODO #116: Implement the grab handle --}}
          <div class="flex-grow"></div>
          {{!-- <a 
            class="grab-handle"
            >
            <i class="fas fa-grip-vertical"></i>
          </a> --}}
          {{> button viewModel=itemViewModelGroup.vmBtnMoveDown fill=false }}
        </div>
        {{#with ../viewModel.listItemTemplate as | template |}}
          {{> (template) viewModel=itemViewModelGroup.listItemViewModel cssClass="flex-grow" }}
        {{/with}}
      </li>
      {{/each}}
    </ol>
    {{!-- Footer --}}
    {{#if viewModel.showFooter}}
    {{> listFooter viewModel=viewModel.vmFooter }}
    {{/if}}
  </div>
</section>